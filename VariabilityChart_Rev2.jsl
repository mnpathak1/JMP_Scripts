///*debug step*/
// --------------------------------------------
// Oneway Analysis Simplified (JMP 7 only)
// JMP script to do oneway analysis where various 
// parameters have already have been set and 
// has only the important parameter summary
// Version 3.0
// Author: Srikanth Ganesan
// Date  : 02/07/2013
// Revision History
// No.	When		Who			What
// 1.0	08/10/08	Srikanth G.	
// 2.0	08/12/08	Srikanth G. 
// 2.1  04/27/11	Srikanth G.	
// 3.0	02/07/13	Srikanth G.
//---------------------------------------------
Clear Globals();
Clear LOG();
dtdata = current data table();
colname= dtdata<<Get Column Names(string);
show("1");
//set up Config file
configfilename = "Config.JMP";
dtconf = open(configfilename);
current data table(dtconf);
// read old column names from config file
XABS = :xabscissa<<Get Values;
YXS =  :yordinate<<Get Values;
NUMY = Nitems(YXS);
NUMX = Nitems(XABS);
For(i=1, i<=NUMY, i++,
	If(YXS[i] == "",
		RemoveFrom(YXS,i);
		NUMY = NUMY-1;
		i = i-1;
	);
);

For(i=1, i<=NUMX, i++,
	If(XABS[i] == "",
		RemoveFrom(XABS,i);
		NUMX = NUMX-1;
		i = i-1;
	);
);


current data table(dtdata);
show("2");
//Find old Yaxis column names that are still in data table
For(i=1, i<=NUMY, i++,
	If(Contains(colname,char(YXS[i])) == 0,
		RemoveFrom(YXS,i);
		NUMY = NUMY-1;
		i = i-1;
	);
);
//Find old Xaxis column names that are still in data table
For(i=1, i<=NUMX, i++,
	If(Contains(colname,char(XABS[i])) == 0,
		RemoveFrom(XABS,i);
		NUMX = NUMX-1;
		i = i-1;
	);
);

show("3");

tempY="";
For(i=1, i<=NUMY, i++,
	if(i< NUMY,
		tempY = tempY || "Column(char(YXS[" || char(i) || "])), ";,
		tempY = tempY || "Column(char(YXS[" || char(i) || "])) "
	);
);

tempX="";
For(i=1, i<=NUMX, i++,
	if(i< NUMX,
		tempX = tempX || "Column(char(XABS[" || char(i) || "])), ";,
		tempX = tempX || "Column(char(XABS[" || char(i) || "])) "
	);
);


r=Eval(Parse(
		"ColumnDialog(
				YCol =ColList(\!"Y, Numeric\!",Min Col(1), DataType(Numeric), Columns(" || tempY || ")),
				XCol =ColList(\!"X, Categorical\!",Min Col(1), DataType(Character), Columns( " || tempX || " ))
		);"
));

show(r);
bval1=r["Button"];
if(bval1==-1,
	Close(dtconf, No Save);
	break);

Remove From( r ); Eval List( r );
xc = r["XCol"];
yc = r["YCol"];
NUMY = Nitems(yc);
NUMX = Nitems(xc);

show("4");
//Update Config table with new column names
current data table(dtconf);
n=NRow(dtconf); 
For(i=n,i>1,i--,
dtconf<<Delete Rows(i));
if(N Items(yc)> N Items(xc),
	dtconf<<Add Rows(N Items(yc)-1);,
	dtconf<<Add Rows(N Items(xc)-1);
);

dtconf<<NewColumn("newxabscissa", Character);
For(i=1, i<=N Items(xc), i++,
:newxabscissa[i]=char(xc[i]);
);
dtconf<<NewColumn("newyordinate", Character);
For(i=1, i<=N Items(yc), i++,
:newyordinate[i]=char(yc[i]);
);

dtconf<<delete columns("xabscissa");
dtconf<<delete columns("yordinate");

col=Column("newxabscissa"); col<<Set Name("xabscissa");
col=Column("newyordinate"); col<<Set Name("yordinate");

dtconf << Save();
close(dtconf,Save("Config.jmp"));

current data table(dtdata);
show("5");
//Add a new column to the raw data table with combined X axis
If(Contains(colname,"XSummCol") > 0,
dtdata<<delete columns("XSummCol");
);
tempX="";
For(i=1, i<=NUMX, i++,
	if(i< NUMX,
		tempX = tempX || ":Name(\!"" || char(xc[i]) || "\!") || \!"_\!" || " ;,
		tempX = tempX || ":Name(\!"" || char(xc[i]) || "\!") "
	);
);
t=Eval(Parse(
"dtdata<<NewColumn(\!"XSummCol\!", Character, Formula(" || tempX || "));"
));

colname= dtdata<<Get Column Names(string);

show("6");
//Construct the plots
tempY="";
For(i=1, i<=N Items(yc), i++,
if(i< N Items(yc),
	tempY = tempY || ":Name(\!"" || char(yc[i]) || "\!"), ";,
	tempY = tempY || ":Name(\!"" || char(yc[i]) || "\!") "
);
);

tempX="";
For(i=1, i<=N Items(xc), i++,
if(i< N Items(xc),
	tempX = tempX || ":Name(\!"" || char(xc[i]) || "\!"), ";,
	tempX = tempX || ":Name(\!"" || char(xc[i]) || "\!") "
);
);
current data table(dtdata);
Varobj =  Eval(Parse(
"Variability Chart(
	Y( " ||  tempY || "),
	X( " ||  tempX || " ),
	Model( \!"Nested\!" ),
	Max Iter( 100 ),
	Conv Limit( 0.00000001 ),
	Number Integration Abscissas( 128 ),
	Number Function Evals( 65536 ),
	Process Variation( 0 ),
	Std Dev Chart( 0 ),
	Points Jittered( 1 ),
	Show Box Plots( 1 ),
	Mean Diamonds( 1 ),

);"

));
show("7");
q = Varobj<<report;
Varobj<<Show Box Plot Whisker Bars( 1 );


owobj =  Eval(Parse(
"Oneway(
	Y(" ||  tempY || " ),
	X( Column(\!"XSummCol\!") ), 
	All Pairs(
		0,
		Confid Quantile( 0 ),
		LSD Threshold Matrix( 0 ),
		Ordered Differences Report( 0 )
	),
	Quantiles( 1 ),
	Means and Std Dev( 1 ),
	Box Plots( 1 ),
	Mean Diamonds( 1 ),
	Mean Lines( 1 ),
	Mean Error Bars( 1 ),
	Std Dev Lines( 1 ),
	Comparison Circles( 1 ),
	Points Jittered( 1 ),
	X Axis proportional( 0 )
	);"
	
));
r = owobj<<report;
owobj<<Quantiles( 0 );
owobj<<Box Plots( 1 );
owobj<<Means and Std Dev( 0 );

show("8");
If(N Items(yc)==1, 
	r<<set title(Right(r<<get title(),Length(r<<get title())-19));
	s_median = r[ColumnBox("Median")];
	s_mean = r[ColumnBox("Mean")];
	s_stdev = r[ColumnBox("Std Dev")];
	s_level = r[ColumnBox("Level")];
	s_number = r[ColumnBox("Number")];
	
	owobj<<All Pairs(
		1,
		Connecting Letters Report ( 1 ),
		Confid Quantile( 0 ),
		LSD Threshold Matrix( 0 ),
		Ordered Differences Report( 0 )
	);
	s_clr = r["Connecting Letters Report"];
	summ = Outline Box(
		"Summary",
		H List Box(s_level,s_number,s_median,s_mean,s_stdev),
		s_clr
		);
	Varobj<<append(summ);
,
	
	For(i=1,i<=N Items(yc), i++, 
	r[i]<<set title(Right(r[i]<<get title(),Length(r[i]<<get title())-19));
	s_median = r[i][ColumnBox("Median")];
	s_mean = r[i][ColumnBox("Mean")];
	s_stdev = r[i][ColumnBox("Std Dev")];
	s_level = r[i][ColumnBox("Level")];
	s_number = r[i][ColumnBox("Number")];
	
	owobj[i]<<	All Pairs(
		1,
		Connecting Letters Report ( 1 ),
		Confid Quantile( 0 ),
		LSD Threshold Matrix( 0 ),
		Ordered Differences Report( 0 )
	);
	s_clr = r[i]["Connecting Letters Report"];
	summ = Outline Box(
		"Summary",
		H List Box(s_level,s_number,s_median,s_mean,s_stdev),
		s_clr
		);
	Varobj[i]<<append(summ);

);
	
	
);


owobj<<close window;

show("END");
