// This script adds quasi quantiles creating new columns for each parameter
// V1: Manjit Pathak 2017/08/17

dt = Current Data Table();

dt << New Column("RColRes_Q", Formula((Col Rank(:COLD_RESISTANCE) / Col Number(:COLD_RESISTANCE)) * 100),evalformula);
dt << New Column("Kink_Amp_Q", Formula(Col Rank(:Kink_Amp) / Col Number(:Kink_Amp)*100),evalformula);
dt << New Column("Kink_Asym_Q", Formula(Col Rank(:Kink_Asym) / Col Number(:Kink_Asym)*100),evalformula);
dt << New Column("Kink_B3_Q", Formula(Col Rank(:Kink_B3) / Col Number(:Kink_B3)*100),evalformula);
dt << New Column("Amp_Rng_N_Q", Formula(Col Rank(:Amp_Rng_N) / Col Number(:Amp_Rng_N)*100),evalformula);
dt << New Column("Asym_Rng_Q", Formula(Col Rank(:Asym_Rng) / Col Number(:Asym_Rng)*100),evalformula);
dt << New Column("Kink_QSNR_Q", Formula(Col Rank(:Kink_QSNR) / Col Number(:Kink_QSNR)*100),evalformula);
dt << New Column("Kink_RNG_QSNR_Q", Formula(Col Rank(:Kink_RNG_QSNR) / Col Number(:Kink_RNG_QSNR)*100),evalformula);
dt << New Column("AD_QSNR_Q", Formula(Col Rank(:AD_QSNR) / Col Number(:AD_QSNR)*100),evalformula);
dt << New Column("AD_RNG_QSNR_Q", Formula(Col Rank(:AD_RNG_QSNR) / Col Number(:AD_RNG_QSNR)*100),evalformula);
dt << New Column("ADN_Min_N_Q", Formula(Col Rank(:ADN_Min_N) / Col Number(:ADN_Min_N)*100),evalformula);
dt << New Column("ADN_Max_N_Q", Formula(Col Rank(:ADN_Max_N) / Col Number(:ADN_Max_N)*100),evalformula);
dt << New Column("ADN_Skew_Q", Formula(Col Rank(:ADN_Skew) / Col Number(:ADN_Skew)*100),evalformula);
dt << New Column("ADN_Kurt_Q", Formula(Col Rank(:ADN_Kurt) / Col Number(:ADN_Kurt)*100),evalformula);
dt << New Column("ADN_Match_Q", Formula(Col Rank(:ADN_Match) / Col Number(:ADN_Match)*100),evalformula);
dt << New Column("ADN_Rng_N_Q", Formula(Col Rank(:ADN_Rng_N) / Col Number(:ADN_Rng_N)*100),evalformula);
dt << New Column("ADN_Sig_N_Q", Formula(Col Rank(:ADN_Sig_N) / Col Number(:ADN_Sig_N)*100),evalformula);
dt << New Column("Avg_MoSS_Q", Formula(Col Rank(:Avg_MoSS) / Col Number(:Avg_MoSS)*100),evalformula);
dt << New Column("ADN_GC_Q", Formula(Col Rank(:ADN_GC) / Col Number(:ADN_GC)*100),evalformula);
dt << New Column("ADN_Max_Q", Formula(Col Rank(:ADN_Max) / Col Number(:ADN_Max)*100),evalformula);
dt << New Column("ADN_Mean_N_Q", Formula(Col Rank(:ADN_Mean_N) / Col Number(:ADN_Mean_N)*100),evalformula);
dt << New Column("ADN_Mean_Q", Formula(Col Rank(:ADN_Mean) / Col Number(:ADN_Mean)*100),evalformula);
dt << New Column("ADN_Min_Q", Formula(Col Rank(:ADN_Min) / Col Number(:ADN_Min)*100),evalformula);
dt << New Column("ADN_Mode_Q", Formula(Col Rank(:ADN_Mode) / Col Number(:ADN_Mode)*100),evalformula);
dt << New Column("ADN_Rng_Q", Formula(Col Rank(:ADN_Rng) / Col Number(:ADN_Rng)*100),evalformula);
dt << New Column("ADN_Sig_Q", Formula(Col Rank(:ADN_Sig) / Col Number(:ADN_Sig)*100),evalformula);
dt << New Column("ADN_WS_N_Q", Formula(Col Rank(:ADN_WS_N) / Col Number(:ADN_WS_N)*100),evalformula);
dt << New Column("ADN_WS_Q", Formula(Col Rank(:ADN_WS) / Col Number(:ADN_WS)*100),evalformula);
dt << New Column("Amp_Rng_Q", Formula(Col Rank(:Amp_Rng) / Col Number(:Amp_Rng)*100),evalformula);
dt << New Column("Amp_Sig_Q", Formula(Col Rank(:Amp_Sig) / Col Number(:Amp_Sig)*100),evalformula);
dt << New Column("Asym_Sig_Q", Formula(Col Rank(:Asym_Sig) / Col Number(:Asym_Sig)*100),evalformula);
dt << New Column("Avg_Avg_N_SS_Q", Formula(Col Rank(:Avg_Avg_N_SS) / Col Number(:Avg_Avg_N_SS)*100),evalformula);
dt << New Column("Avg_Avg_SS_Q", Formula(Col Rank(:Avg_Avg_SS) / Col Number(:Avg_Avg_SS)*100),evalformula);
dt << New Column("Avg_Max_N_SS_Q", Formula(Col Rank(:Avg_Max_N_SS) / Col Number(:Avg_Max_N_SS)*100),evalformula);
dt << New Column("Avg_Max_SS_Q", Formula(Col Rank(:Avg_Max_SS) / Col Number(:Avg_Max_SS)*100),evalformula);
dt << New Column("Avg_Min_N_SS_Q", Formula(Col Rank(:Avg_Min_N_SS) / Col Number(:Avg_Min_N_SS)*100),evalformula);
dt << New Column("Avg_Min_SS_Q", Formula(Col Rank(:Avg_Min_SS) / Col Number(:Avg_Min_SS)*100),evalformula);
dt << New Column("Avg_Rng_N_SS_Q", Formula(Col Rank(:Avg_Rng_N_SS) / Col Number(:Avg_Rng_N_SS)*100),evalformula);
dt << New Column("Avg_Rng_SS_Q", Formula(Col Rank(:Avg_Rng_SS) / Col Number(:Avg_Rng_SS)*100),evalformula);
dt << New Column("Kink_B1_Q", Formula(Col Rank(:Kink_B1) / Col Number(:Kink_B1)*100),evalformula);
dt << New Column("Kink_B2_Q", Formula(Col Rank(:Kink_B2) / Col Number(:Kink_B2)*100),evalformula);
dt << New Column("KINK_MD52_Q", Formula(Col Rank(:KINK_MD52) / Col Number(:KINK_MD52)*100),evalformula);
dt << New Column("Kurt_SS_Q", Formula(Col Rank(:Kurt_SS) / Col Number(:Kurt_SS)*100),evalformula);
dt << New Column("Max_FlSS_Q", Formula(Col Rank(:Max_FlSS) / Col Number(:Max_FlSS)*100),evalformula);
dt << New Column("Max_N_SS_Q", Formula(Col Rank(:Max_N_SS) / Col Number(:Max_N_SS)*100),evalformula);
dt << New Column("Max_SS_Q", Formula(Col Rank(:Max_SS) / Col Number(:Max_SS)*100),evalformula);
dt << New Column("Median_N_SS_Q", Formula(Col Rank(:Median_N_SS) / Col Number(:Median_N_SS)*100),evalformula);
dt << New Column("Median_SS_Q", Formula(Col Rank(:Median_SS) / Col Number(:Median_SS)*100),evalformula);
dt << New Column("Min_FlSS_Q", Formula(Col Rank(:Min_FlSS) / Col Number(:Min_FlSS)*100),evalformula);
dt << New Column("Min_N_SS_Q", Formula(Col Rank(:Min_N_SS) / Col Number(:Min_N_SS)*100),evalformula);
dt << New Column("Min_SS_Q", Formula(Col Rank(:Min_SS) / Col Number(:Min_SS)*100),evalformula);
dt << New Column("RMS_Sig_N_SS_Q", Formula(Col Rank(:RMS_Sig_N_SS) / Col Number(:RMS_Sig_N_SS)*100),evalformula);
dt << New Column("RMS_Sig_SS_Q", Formula(Col Rank(:RMS_Sig_SS) / Col Number(:RMS_Sig_SS)*100),evalformula);
dt << New Column("Rng_Avg_N_SS_Q", Formula(Col Rank(:Rng_Avg_N_SS) / Col Number(:Rng_Avg_N_SS)*100),evalformula);
dt << New Column("Rng_Avg_SS_Q", Formula(Col Rank(:Rng_Avg_SS) / Col Number(:Rng_Avg_SS)*100),evalformula);
dt << New Column("Rng_FlSS_Q", Formula(Col Rank(:Rng_FlSS) / Col Number(:Rng_FlSS)*100),evalformula);
dt << New Column("Rng_Max_N_SS_Q", Formula(Col Rank(:Rng_Max_N_SS) / Col Number(:Rng_Max_N_SS)*100),evalformula);
dt << New Column("Rng_Max_SS_Q", Formula(Col Rank(:Rng_Max_SS) / Col Number(:Rng_Max_SS)*100),evalformula);
dt << New Column("Rng_N_SS_Q", Formula(Col Rank(:Rng_N_SS) / Col Number(:Rng_N_SS)*100),evalformula);
dt << New Column("Rng_Sig_N_SS_Q", Formula(Col Rank(:Rng_Sig_N_SS) / Col Number(:Rng_Sig_N_SS)*100),evalformula);
dt << New Column("Rng_Sig_SS_Q", Formula(Col Rank(:Rng_Sig_SS) / Col Number(:Rng_Sig_SS)*100),evalformula);
dt << New Column("Rng_SS_Q", Formula(Col Rank(:Rng_SS) / Col Number(:Rng_SS)*100),evalformula);
dt << New Column("Sig_N_SS_Q", Formula(Col Rank(:Sig_N_SS) / Col Number(:Sig_N_SS)*100),evalformula);
dt << New Column("Sig_SS_Q", Formula(Col Rank(:Sig_SS) / Col Number(:Sig_SS)*100),evalformula);
dt << New Column("Skew_SS_Q", Formula(Col Rank(:Skew_SS) / Col Number(:Skew_SS)*100),evalformula);
dt << New Column("SM_Max_N_SS_Q", Formula(Col Rank(:SM_Max_N_SS) / Col Number(:SM_Max_N_SS)*100),evalformula);
dt << New Column("SM_Max_SS_Q", Formula(Col Rank(:SM_Max_SS) / Col Number(:SM_Max_SS)*100),evalformula);
dt << New Column("SM_Min_N_SS_Q", Formula(Col Rank(:SM_Min_N_SS) / Col Number(:SM_Min_N_SS)*100),evalformula);
dt << New Column("SM_Min_SS_Q", Formula(Col Rank(:SM_Min_SS) / Col Number(:SM_Min_SS)*100),evalformula);
dt << New Column("SM_Rng_N_SS_Q", Formula(Col Rank(:SM_Rng_N_SS) / Col Number(:SM_Rng_N_SS)*100),evalformula);
dt << New Column("SM_Rng_SS_Q", Formula(Col Rank(:SM_Rng_SS) / Col Number(:SM_Rng_SS)*100),evalformula);
dt << New Column("TCK_BHJ_Mag_Q", Formula(Col Rank(:TCK_BHJ_Mag) / Col Number(:TCK_BHJ_Mag)*100),evalformula);
dt << New Column("TCK_BHJump_Q", Formula(Col Rank(:TCK_BHJump) / Col Number(:TCK_BHJump)*100),evalformula);
dt << New Column("TCK_MD52Fl_Q", Formula(Col Rank(:TCK_MD52Fld) / Col Number(:TCK_MD52Fld)*100),evalformula);
